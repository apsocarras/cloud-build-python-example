# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# [START cloudbuild_python_yaml]
# [START cloudbuild_python_dependencies_yaml]
steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]
# [END cloudbuild_python_dependencies_yaml]

  # [START cloudbuild_python_tests_yaml]
  # Run unit tests
  - name: python
    entrypoint: python
    args: ["-m", "pytest", "--junitxml=${SHORT_SHA}_test_log.xml"] 
  # [END cloudbuild_python_tests_yaml]

  # [START cloudbuild_python_image_yaml]
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 
           'us-east1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}', '.']
  # [END cloudbuild_python_image_yaml]

  # [START cloudbuild_python_push_yaml]
  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'us-east1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}']
  # [END cloudbuild_python_push_yaml]
  
  # [START cloudbuild_python_deploy_yaml]
  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args: ['gcloud', 'run', 'deploy', 'helloworld-${SHORT_SHA}', 
           '--image=us-east1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}', 
           '--region', 'us-east1', '--platform', 'managed', 
           '--allow-unauthenticated']
  # [END cloudbuild_python_deploy_yaml]

  # Add IAM Policy Binding 
    # This enables the service to be invokeable for all users.
    # You could also create a specific service account for invoking Cloud Run services.
  - name: google/cloud-sdk
    args: ['gcloud', 'run', 'services', 'add-iam-policy-binding',
           '--region=us-east1',
           '--member=allUsers',
           '--role=roles/run.invoker',
           'helloworld-${SHORT_SHA}',
      ]

  
# [START cloudbuild_python_logs_yaml]
# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: gs://${_BUCKET_NAME}/
    paths:
      - ${SHORT_SHA}_test_log.xml
# [END cloudbuild_python_logs_yaml]
# Store images in Google Artifact Registry 
images:
  - us-east1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/myimage:${SHORT_SHA}
# [END cloudbuild_python_yaml]

# See README.md -- had to first make an AR repo and set it here for this variable to have a valid value
substitutions: 
  _ARTIFACT_REGISTRY_REPO: "cloud-build-test-repo"